{
  "rules": {
    ".read": false,
    ".write": false,
    "users": {
      ".read": "auth != null",
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "role": {
          ".validate": "newData.val() === 'admin' || newData.val() === 'subadmin'"
        }
      }
    },
    "items": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      ".indexOn": ["assignedTo", "status"],
      "$itemId": {
        ".validate": "newData.hasChildren(['name', 'price'])",
        "price": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        }
      }
    },
    "items_assignments": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "$itemId": {
          "assigned": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    "notifications": {
      ".read": "auth != null",
      "admin": {
        ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "auth != null",
        "$notificationId": {
          ".validate": "newData.hasChildren(['type', 'status', 'timestamp'])"
        }
      },
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "$notificationId": {
          ".validate": "newData.hasChildren(['type', 'status', 'timestamp'])",
          "status": {
            ".validate": "newData.val() === 'read' || newData.val() === 'unread'"
          },
          "type": {
            ".validate": "newData.val() === 'new_item' || newData.val() === 'item_assigned' || newData.val() === 'item_unassigned' || newData.val() === 'price_set'"
          }
        }
      }
    },
    "purchases": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && auth.uid === $uid",
        "$purchaseId": {
          ".validate": "newData.hasChildren(['items', 'totalAmount', 'timestamp', 'userId', 'userEmail'])",
          "totalAmount": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "items": {
            "$itemId": {
              ".validate": "newData.hasChildren(['name', 'price', 'quantity'])",
              "price": {
                ".validate": "newData.isNumber() && newData.val() >= 0"
              },
              "quantity": {
                ".validate": "newData.isNumber() && newData.val() > 0"
              }
            }
          }
        }
      }
    },
    "budget": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "total": {
        ".validate": "newData.isNumber() && newData.val() >= 0"
      },
      "additions": {
        "$additionId": {
          ".validate": "newData.hasChildren(['amount', 'timestamp', 'adminId', 'adminEmail'])",
          "amount": {
            ".validate": "newData.isNumber() && newData.val() > 0"
          }
        }
      }
    },
    "budget_allocations": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "$allocationId": {
          ".validate": "newData.hasChildren(['amount', 'timestamp', 'type'])",
          "amount": {
            ".validate": "newData.isNumber() && newData.val() > 0"
          },
          "type": {
            ".validate": "newData.val() === 'allocation' || newData.val() === 'reversal'"
          }
        }
      }
    }
  }
} 